{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport axios from 'axios';\nimport Router from 'next/router';\naxios.defaults.withCredentials = true;\nexport const getServerSideToken = req => {\n  const {\n    signedCookies = {}\n  } = req || {};\n\n  if (!signedCookies) {\n    return {};\n  } else if (!signedCookies.token) {\n    return {};\n  }\n\n  return {\n    user: signedCookies.token\n  };\n};\nexport const getClientSideToken = () => {\n  if (false) {\n    const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return {\n      user\n    };\n  }\n\n  return {\n    user: {}\n  };\n};\nconst WINDOW_USER_SCRIPT_VARIABLE = '__USER__';\nexport const getUserScript = userData => {\n  return `${WINDOW_USER_SCRIPT_VARIABLE} = ${_JSON$stringify(userData)}`;\n};\nexport const authInitialProps = isProtectedRoute => ({\n  req,\n  res\n}) => {\n  const auth = req ? getServerSideToken(req) : getClientSideToken(req);\n  const currentPath = req ? req.url : window.location.pathname;\n  const user = auth.user;\n  const isAnonymous = !user || user.type !== \"authenticated\";\n\n  if (isProtectedRoute && isAnonymous && currentPath !== \"/login\") {\n    return redirectUser(res, \"/login\");\n  }\n\n  return {\n    auth\n  };\n};\n\nconst redirectUser = (res, path) => {\n  if (res) {\n    res.redirect(302, path);\n    res.finished = true;\n    return {};\n  }\n\n  Router.replace(path);\n  return {};\n};\n\nexport const logoutUser = async () => {\n  if (false) {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = {};\n  }\n\n  await axios.post('/api/logout');\n  Router.push('/login');\n};\nexport const loginUser = async (email, password) => {\n  const {\n    data\n  } = await axios.post('/api/login', {\n    email,\n    password\n  });\n\n  if (false) {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\n  }\n};\nexport const getUserProfile = async () => {\n  const {\n    data\n  } = await axios.get('/api/profile');\n  return data;\n};","map":{"version":3,"sources":["C:/Users/Roglol/Desktop/next-cookie-auth/libs/auth.js"],"names":["axios","Router","defaults","withCredentials","getServerSideToken","req","signedCookies","token","user","getClientSideToken","window","WINDOW_USER_SCRIPT_VARIABLE","getUserScript","userData","authInitialProps","isProtectedRoute","res","auth","currentPath","url","location","pathname","isAnonymous","type","redirectUser","path","redirect","finished","replace","logoutUser","post","push","loginUser","email","password","data","getUserProfile","get"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport Router from 'next/router';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nexport const getServerSideToken = req =>{\r\n    const {signedCookies = {} } = req || {};\r\n\r\n    if(!signedCookies){\r\n        return{}\r\n    }else if(!signedCookies.token){\r\n       return{}\r\n    }\r\n    return { user: signedCookies.token }\r\n}\r\n\r\nexport const getClientSideToken = () =>{\r\n    if(typeof window !== 'undefined'){\r\n        const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\r\n        return {user}\r\n    }\r\n    return {user:{}}\r\n}\r\nconst WINDOW_USER_SCRIPT_VARIABLE = '__USER__';\r\n\r\nexport const getUserScript = userData =>{\r\n    return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(userData)}`\r\n}\r\nexport const authInitialProps = isProtectedRoute => ({req,res}) =>{\r\n      const auth =  req ? getServerSideToken(req) : getClientSideToken(req)\r\n      const currentPath = req ? req.url : window.location.pathname;\r\n      const user = auth.user;\r\n      const isAnonymous = !user || user.type !== \"authenticated\";\r\n      if(isProtectedRoute && isAnonymous && currentPath !== \"/login\"){\r\n          return redirectUser(res, \"/login\")\r\n      }\r\n      return {auth}\r\n}\r\n\r\nconst redirectUser = (res,path) =>{\r\n    if(res){\r\n   res.redirect(302,path);\r\n   res.finished = true;\r\n   return {}\r\n    }\r\n\r\n    Router.replace(path);\r\n    return{}\r\n}\r\n\r\nexport const logoutUser = async() =>{\r\n    if(typeof window !== 'undefined'){\r\n        window[WINDOW_USER_SCRIPT_VARIABLE] = {}\r\n    }\r\n    await axios.post('/api/logout')\r\n    Router.push('/login')\r\n}\r\n\r\nexport const loginUser =  async (email,password) =>{\r\n        const {data} = await axios.post('/api/login',{email,password})\r\n        if(typeof window !== 'undefined'){\r\n            window[WINDOW_USER_SCRIPT_VARIABLE] = data || {}\r\n        }\r\n}\r\n\r\nexport const getUserProfile =  async () => {\r\n    const {data} = await axios.get('/api/profile')\r\n    return data\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}